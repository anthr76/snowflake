From f8dcccb8b6f8269e1f4c53171012dd36bd7d332b Mon Sep 17 00:00:00 2001
From: Anthony Rabbito <hello@anthonyrabbito.com>
Date: Sun, 30 Jun 2024 18:18:18 -0400
Subject: [PATCH] ./1232.patch

---
 src/main.cpp         | 2 ++
 src/steamcompmgr.cpp | 9 ++++++++-
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/src/main.cpp b/src/main.cpp
index 31bee29..8246f2c 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -120,6 +120,7 @@ const struct option *gamescope_options = (struct option[]){
 	{ "debug-hud", no_argument, nullptr, 'v' },
 	{ "debug-events", no_argument, nullptr, 0 },
 	{ "steam", no_argument, nullptr, 'e' },
+	{ "overlay-workaround", no_argument, nullptr, 0 },
 	{ "force-composition", no_argument, nullptr, 'c' },
 	{ "composite-debug", no_argument, nullptr, 0 },
 	{ "disable-xres", no_argument, nullptr, 'x' },
@@ -184,6 +185,7 @@ const char usage[] =
 	"  -T, --stats-path               write statistics to path\n"
 	"  -C, --hide-cursor-delay        hide cursor image after delay\n"
 	"  -e, --steam                    enable Steam integration\n"
+	"  --overlay-workaround           workaround steam overlay's issues with wayland by allowing the overlay attach to the game rather than gamescope\n"
 	"  --xwayland-count               create N xwayland servers\n"
 	"  --prefer-vk-device             prefer Vulkan device for compositing (ex: 1002:7300)\n"
 	"  --force-orientation            rotate the internal display (left, right, normal, upsidedown)\n"
diff --git a/src/steamcompmgr.cpp b/src/steamcompmgr.cpp
index 25630b0..f671b6e 100644
--- a/src/steamcompmgr.cpp
+++ b/src/steamcompmgr.cpp
@@ -948,6 +948,7 @@ static bool		debugEvents = false;
 extern bool		steamMode;
 
 gamescope::ConVar<bool> cv_composite_force{ "composite_force", false, "Force composition always, never use scanout" };
+bool 			overlayWorkaround = false;
 static bool		useXRes = true;
 
 struct wlr_buffer_map_entry {
@@ -6325,6 +6326,10 @@ spawn_client( char **argv, bool bAsyncChild )
 	const char *pchCurrentPreload = getenv( "LD_PRELOAD" );
 	bool bFirst = true;
 
+	if( overlayWorkaround ){
+		xwm_log.debugf( "Working around steam overlay" );
+	}
+
 	if ( pchCurrentPreload != nullptr )
 	{
 		pchPreloadCopy = strdup( pchCurrentPreload );
@@ -6345,7 +6350,7 @@ spawn_client( char **argv, bool bAsyncChild )
 			// If there's a string and it's not gameoverlayrenderer, append it to our new LD_PRELOAD
 			if ( pchPreloadCopy[ i ] != '\0' )
 			{
-				if ( strstr( pchPreloadCopy + i, "gameoverlayrenderer.so" ) == nullptr )
+				if ( overlayWorkaround || strstr( pchPreloadCopy + i, "gameoverlayrenderer.so" ) == nullptr )
 				{
 					if ( bFirst == false )
 					{
@@ -7199,6 +7204,8 @@ steamcompmgr_main(int argc, char **argv)
 					debugFocus = true;
 				} else if (strcmp(opt_name, "synchronous-x11") == 0) {
 					synchronize = true;
+				} else if (strcmp(opt_name, "overlay-workaround") == 0) {
+					overlayWorkaround = true;
 				} else if (strcmp(opt_name, "debug-events") == 0) {
 					debugEvents = true;
 				} else if (strcmp(opt_name, "cursor") == 0) {
-- 
2.45.1

